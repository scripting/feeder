<?xml version="1.0" encoding="ISO-8859-1"?>
<!-- OPML generated by OPML Editor v10.1b19 on Mon, 20 Jun 2022 16:18:58 GMT -->
<opml version="2.0">
	<head>
		<title>nodeEditor: feeder</title>
		<dateCreated>Fri, 19 Nov 2021 16:45:29 GMT</dateCreated>
		<dateModified>Mon, 20 Jun 2022 16:18:58 GMT</dateModified>
		<ownerName>Dave Winer</ownerName>
		<ownerId>http://davewiner.com/</ownerId>
		<expansionState>1, 2, 3, 5, 11, 13, 15, 19, 20, 28, 36, 45, 55, 69, 70, 71, 81, 83, 85, 86, 89, 100, 104, 107, 115, 120, 122, 127, 128, 131, 136, 144, 146, 148, 150, 152, 155, 159, 160, 183, 189, 198</expansionState>
		<vertScrollState>1</vertScrollState>
		<windowTop>53</windowTop>
		<windowLeft>466</windowLeft>
		<windowBottom>977</windowBottom>
		<windowRight>1499</windowRight>
		</head>
	<body>
		<outline text="/scripting.com/code/feeder/" created="Sun, 29 Aug 2021 15:07:43 GMT">
			<outline text="worknotes.md" created="Sun, 12 Jun 2022 13:52:22 GMT">
				<outline text="6/20/22; 11:59:45 AM by DW -- v0.4.6" created="Sat, 18 Jun 2022 15:36:53 GMT">
					<outline text="feeder now supports templates, so it's easy to add a new way to view a feed. " created="Sat, 18 Jun 2022 15:38:21 GMT"/>
					<outline text="here's an example. I implemented the mailbox viewer as a template, not a built-in command." created="Mon, 20 Jun 2022 15:58:55 GMT">
						<outline text="&lt;a href=&quot;http://feeder.scripting.com/?template=mailbox&amp;url=https://fallows.substack.com/feed&quot;&gt;http://feeder.scripting.com/?template=mailbox&amp;url=https://fallows.substack.com/feed&lt;/a&gt;" created="Mon, 20 Jun 2022 15:59:13 GMT"/>
						</outline>
					<outline text="there's a viewers subfolder, to add a template named hello, you'd add a file hello.html to the folder." created="Mon, 20 Jun 2022 16:16:18 GMT"/>
					<outline text="before serving the text, we do some macro substitutions, with the title of the feed, the name and version number of the feeder app, and most important, a JSON structure with the contents of the feed as produced by the reallysimple package. " created="Mon, 20 Jun 2022 16:16:44 GMT"/>
					<outline text="next step -- write a hello world template and document it. this will be clearer when that's provided." created="Mon, 20 Jun 2022 15:59:25 GMT"/>
					<outline text="still feeder is just a testbed. these templates will become applications in their own right. " created="Mon, 20 Jun 2022 16:17:48 GMT"/>
					</outline>
				<outline text="6/13/22; 12:06:18 PM by DW -- v0.4.5" created="Mon, 13 Jun 2022 16:06:17 GMT">
					<outline text="Include the charset in the content-type header when returning JSON and XML. " created="Mon, 13 Jun 2022 16:06:18 GMT"/>
					</outline>
				<outline text="6/12/22; 6:56:43 PM by DW -- v0.4.4" created="Sun, 12 Jun 2022 22:56:39 GMT">
					<outline text="We now keep a stats.json file, with info on number of reads, errors, and reads per feed." created="Sun, 12 Jun 2022 22:56:56 GMT"/>
					</outline>
				<outline text="6/12/22; 9:52:26 AM by DW" created="Sun, 12 Jun 2022 13:52:25 GMT">
					<outline text="I need this functionality for the reallysimple project. " created="Sun, 12 Jun 2022 13:52:27 GMT"/>
					<outline text="This predates the package, it's basically where it was developed." created="Sun, 12 Jun 2022 13:52:45 GMT"/>
					<outline text="So I rewrote it to use the package. " created="Sun, 12 Jun 2022 13:52:56 GMT"/>
					</outline>
				</outline>
			<outline text="package.json">
				<outline text="{">
					<outline text="&quot;name&quot;: &quot;feeder&quot;,"/>
					<outline text="&quot;description&quot;: &quot;A Node server app that hooks the reallysimple package up to the web.&quot;," created="Sun, 12 Jun 2022 15:30:26 GMT"/>
					<outline text="&quot;version&quot;: &quot;0.4.6&quot;, "/>
					<outline text="&quot;author&quot;: &quot;Dave Winer &lt;dave@scripting.com&gt;&quot;,"/>
					<outline text="&quot;license&quot;: &quot;MIT&quot;,"/>
					<outline text="&quot;main&quot;: &quot;feeder.js&quot;,"/>
					<outline text="&quot;repository&quot;: {">
						<outline text="&quot;type&quot;: &quot;git&quot;,"/>
						<outline text="&quot;url&quot;: &quot;https://github.com/scripting/feeder.git&quot;"/>
						<outline text="},"/>
						</outline>
					<outline text="&quot;dependencies&quot; : {">
						<outline text="&quot;daveutils&quot;: &quot;*&quot;,"/>
						<outline text="&quot;reallysimple&quot;: &quot;*&quot;,"/>
						<outline text="&quot;request&quot;: &quot;*&quot;,"/>
						<outline text="&quot;davehttp&quot;: &quot;*&quot;"/>
						<outline text="},"/>
						</outline>
					<outline text="&quot;engines&quot;: { ">
						<outline text="&quot;node&quot;: &quot;*&quot;"/>
						<outline text="}"/>
						</outline>
					<outline text="}"/>
					</outline>
				</outline>
			<outline text="feeder.js" created="Mon, 06 Jun 2022 15:08:02 GMT">
				<outline text="const myVersion = &quot;0.4.6&quot;, myProductName = &quot;feeder&quot;;    "/>
				<outline text="" created="Sat, 05 Mar 2022 17:19:07 GMT"/>
				<outline text="const fs = require (&quot;fs&quot;);" created="Sat, 20 Feb 2021 22:03:12 GMT"/>
				<outline text="const utils = require (&quot;daveutils&quot;);" created="Sat, 20 Feb 2021 22:03:12 GMT"/>
				<outline text="const request = require (&quot;request&quot;); "/>
				<outline text="const davehttp = require (&quot;davehttp&quot;); "/>
				<outline text="const reallysimple = require (&quot;reallysimple&quot;);" created="Sat, 05 Mar 2022 17:19:07 GMT"/>
				<outline text="" created="Wed, 08 Jun 2022 15:36:28 GMT"/>
				<outline text="var config = {">
					<outline text="port: process.env.PORT || 1403,"/>
					<outline text="flAllowAccessFromAnywhere: true,"/>
					<outline text="flLogToConsole: true,"/>
					<outline text="defaultFeedUrl: &quot;http://nytimes.com/timeswire/feeds/&quot;," created="Sun, 12 Jun 2022 13:31:26 GMT"/>
					<outline text="fnameStats: &quot;stats.json&quot;," created="Sun, 12 Jun 2022 22:45:30 GMT"/>
					<outline text="urlMailboxTemplate: &quot;http://scripting.com/code/river6/templates/feedviewer/index.html&quot;," created="Sat, 18 Jun 2022 15:42:03 GMT"/>
					<outline text="viewersFolderPath: &quot;viewers/&quot;" created="Mon, 20 Jun 2022 15:13:29 GMT"/>
					<outline text="}"/>
					</outline>
				<outline text="" created="Sun, 12 Jun 2022 22:40:46 GMT"/>
				<outline text="var stats = {" created="Sun, 12 Jun 2022 22:40:46 GMT">
					<outline text="ctLaunches: 0," created="Sun, 12 Jun 2022 22:53:47 GMT"/>
					<outline text="whenLastLaunch: undefined," created="Sun, 12 Jun 2022 22:54:40 GMT"/>
					<outline text="ctFeedReads: 0," created="Sun, 12 Jun 2022 22:40:58 GMT"/>
					<outline text="whenLastFeedRead: undefined," created="Sun, 12 Jun 2022 22:41:04 GMT"/>
					<outline text="ctFeedReadErrors: 0," created="Sun, 12 Jun 2022 22:43:50 GMT"/>
					<outline text="whenLastFeedReadError: undefined," created="Sun, 12 Jun 2022 22:41:04 GMT"/>
					<outline text="ctSecsLastRequest: undefined," created="Mon, 13 Jun 2022 12:17:16 GMT"/>
					<outline text="feeds: new Object ()" created="Sun, 12 Jun 2022 22:41:14 GMT"/>
					<outline text="}" created="Sun, 12 Jun 2022 22:40:52 GMT"/>
					</outline>
				<outline text="var flStatsChanged = false;"/>
				<outline text="" created="Sun, 12 Jun 2022 22:40:46 GMT"/>
				<outline text="function statsChanged () {" created="Sun, 12 Jun 2022 22:40:47 GMT">
					<outline text="flStatsChanged = true;" created="Sun, 12 Jun 2022 22:45:07 GMT"/>
					<outline text="}" created="Sun, 12 Jun 2022 22:45:03 GMT"/>
					</outline>
				<outline text="function readFeed (feedUrl=config.defaultFeedUrl, callback) {" created="Sun, 12 Jun 2022 13:32:03 GMT">
					<outline text="const whenstart = new Date ();" created="Sun, 12 Jun 2022 22:51:51 GMT"/>
					<outline text="reallysimple.readFeed (feedUrl, function (err, theFeed) {">
						<outline text="stats.ctFeedReads++;" created="Sun, 12 Jun 2022 22:47:14 GMT"/>
						<outline text="stats.whenLastFeedRead = whenstart;" created="Sun, 12 Jun 2022 22:47:59 GMT"/>
						<outline text="stats.ctSecsLastRequest = utils.secondsSince (whenstart);" created="Mon, 13 Jun 2022 12:17:47 GMT"/>
						<outline text="if (err) {" created="Sun, 12 Jun 2022 22:46:54 GMT">
							<outline text="stats.ctFeedReadErrors++;" created="Sun, 12 Jun 2022 22:47:14 GMT"/>
							<outline text="stats.whenLastFeedReadError = whenstart;" created="Sun, 12 Jun 2022 22:47:59 GMT"/>
							<outline text="callback (err);" created="Sun, 12 Jun 2022 22:48:44 GMT"/>
							<outline text="}" created="Sun, 12 Jun 2022 22:46:57 GMT"/>
							</outline>
						<outline text="else {" created="Sun, 12 Jun 2022 22:46:58 GMT">
							<outline text="if (stats.feeds [feedUrl] === undefined) {" created="Sun, 12 Jun 2022 22:49:30 GMT">
								<outline text="stats.feeds [feedUrl] = {" created="Sun, 12 Jun 2022 22:49:59 GMT">
									<outline text="ct: 1," created="Sun, 12 Jun 2022 22:50:12 GMT"/>
									<outline text="when: whenstart" created="Sun, 12 Jun 2022 22:50:16 GMT"/>
									<outline text="}" created="Sun, 12 Jun 2022 22:50:08 GMT"/>
									</outline>
								<outline text="}" created="Sun, 12 Jun 2022 22:49:43 GMT"/>
								</outline>
							<outline text="else {" created="Sun, 12 Jun 2022 22:50:35 GMT">
								<outline text="let thisFeed = stats.feeds [feedUrl];" created="Sun, 12 Jun 2022 22:50:44 GMT"/>
								<outline text="thisFeed.ct++;" created="Sun, 12 Jun 2022 22:51:18 GMT"/>
								<outline text="thisFeed.when = whenstart;" created="Sun, 12 Jun 2022 22:51:21 GMT"/>
								<outline text="}" created="Sun, 12 Jun 2022 22:50:37 GMT"/>
								</outline>
							<outline text="callback (undefined, theFeed);" created="Sun, 12 Jun 2022 22:48:44 GMT"/>
							<outline text="}" created="Sun, 12 Jun 2022 22:46:59 GMT"/>
							</outline>
						<outline text="statsChanged ();" created="Sun, 12 Jun 2022 22:48:42 GMT"/>
						<outline text="});" created="Sun, 12 Jun 2022 22:46:50 GMT"/>
						</outline>
					<outline text="}" created="Sun, 12 Jun 2022 13:32:15 GMT"/>
					</outline>
				<outline text="function viewFeedInTemplate (feedUrl, viewerName, callback) { //6/20/22 by DW" created="Mon, 20 Jun 2022 15:06:20 GMT">
					<outline text="function servePage (templatetext, theFeed) {" created="Fri, 04 Feb 2022 20:59:16 GMT">
						<outline text="var pagetable = {">
							<outline text="productNameForDisplay: myProductName, "/>
							<outline text="version: myVersion,"/>
							<outline text="feedTitle: theFeed.title," created="Sat, 18 Jun 2022 15:17:18 GMT"/>
							<outline text="config: utils.jsonStringify ({}), //a feature we aren't using" created="Sat, 18 Jun 2022 15:59:49 GMT"/>
							<outline text="riverJsonText: utils.jsonStringify (theFeed) //probably shouldn't call this &quot;river,&quot; it's just a feed not a river" created="Sat, 18 Jun 2022 15:52:00 GMT"/>
							<outline text="};"/>
							</outline>
						<outline text="var pagetext = utils.multipleReplaceAll (templatetext.toString (), pagetable, false, &quot;[%&quot;, &quot;%]&quot;);"/>
						<outline text="callback (pagetext);"/>
						<outline text="}" created="Fri, 04 Feb 2022 21:02:43 GMT"/>
						</outline>
					<outline text="readFeed (feedUrl, function (err, theFeed) {" created="Sun, 12 Jun 2022 13:58:30 GMT">
						<outline text="var flnotfound = true, lowerViewerName = utils.stringLower (viewerName);" created="Mon, 20 Jun 2022 15:16:28 GMT"/>
						<outline text="utils.sureFolder (config.viewersFolderPath, function () {" created="Mon, 20 Jun 2022 15:28:47 GMT">
							<outline text="var f = config.viewersFolderPath + viewerName + &quot;.html&quot;;" created="Mon, 20 Jun 2022 15:33:52 GMT"/>
							<outline text="fs.readFile (f, function (err, templatetext) {" created="Mon, 20 Jun 2022 15:18:06 GMT">
								<outline text="if (err) {" created="Mon, 20 Jun 2022 15:18:33 GMT">
									<outline text="callback (&quot;Can't view the feed because there was an error reading the viewer.&quot;);" created="Mon, 20 Jun 2022 15:18:41 GMT"/>
									<outline text="}" created="Mon, 20 Jun 2022 15:18:35 GMT"/>
									</outline>
								<outline text="else {" created="Mon, 20 Jun 2022 15:18:36 GMT">
									<outline text="servePage (templatetext, theFeed);" created="Fri, 04 Feb 2022 21:01:42 GMT"/>
									<outline text="}" created="Mon, 20 Jun 2022 15:18:38 GMT"/>
									</outline>
								<outline text="});" created="Mon, 20 Jun 2022 15:18:19 GMT"/>
								</outline>
							<outline text="});" created="Mon, 20 Jun 2022 15:29:34 GMT"/>
							</outline>
						<outline text="});" created="Mon, 20 Jun 2022 15:07:11 GMT"/>
						</outline>
					<outline text="}" created="Mon, 20 Jun 2022 15:06:34 GMT"/>
					</outline>
				<outline text="function readConfig (f, config, callback) {" created="Mon, 08 Mar 2021 15:19:44 GMT">
					<outline text="fs.readFile (f, function (err, jsontext) {" created="Mon, 08 Mar 2021 15:19:57 GMT">
						<outline text="if (!err) {" created="Mon, 08 Mar 2021 15:20:27 GMT">
							<outline text="try {" created="Mon, 08 Mar 2021 15:20:49 GMT">
								<outline text="var jstruct = JSON.parse (jsontext);" created="Mon, 08 Mar 2021 15:21:07 GMT"/>
								<outline text="for (var x in jstruct) {" created="Mon, 08 Mar 2021 15:21:14 GMT">
									<outline text="config [x] = jstruct [x];" created="Mon, 08 Mar 2021 15:21:20 GMT"/>
									<outline text="}" created="Mon, 08 Mar 2021 15:21:25 GMT"/>
									</outline>
								<outline text="}" created="Mon, 08 Mar 2021 15:20:58 GMT"/>
								</outline>
							<outline text="catch (err) {" created="Mon, 08 Mar 2021 15:20:59 GMT">
								<outline text="console.log (&quot;Error reading &quot; + f);" created="Mon, 08 Mar 2021 15:20:35 GMT"/>
								<outline text="}" created="Mon, 08 Mar 2021 15:21:03 GMT"/>
								</outline>
							<outline text="}" created="Mon, 08 Mar 2021 15:20:30 GMT"/>
							</outline>
						<outline text="callback ();" created="Mon, 08 Mar 2021 15:22:15 GMT"/>
						<outline text="});" created="Mon, 08 Mar 2021 15:20:25 GMT"/>
						</outline>
					<outline text="}" created="Mon, 08 Mar 2021 15:19:56 GMT"/>
					</outline>
				<outline text="function everySecond () {" created="Thu, 29 Apr 2021 21:20:46 GMT">
					<outline text="if (flStatsChanged) {" created="Sat, 01 May 2021 19:58:33 GMT">
						<outline text="flStatsChanged = false;" created="Sat, 01 May 2021 19:58:39 GMT"/>
						<outline text="fs.writeFile (config.fnameStats, utils.jsonStringify (stats), function (err) {" created="Sat, 01 May 2021 19:58:46 GMT">
							<outline text="});" created="Sat, 01 May 2021 19:59:14 GMT"/>
							</outline>
						<outline text="}" created="Sat, 01 May 2021 19:58:38 GMT"/>
						</outline>
					<outline text="}" created="Sat, 01 May 2021 19:58:31 GMT"/>
					</outline>
				<outline text="" created="Mon, 20 Jun 2022 15:06:20 GMT"/>
				<outline text="" created="Wed, 08 Jun 2022 15:43:34 GMT"/>
				<outline text="readConfig (config.fnameStats, stats, function () {" created="Sun, 12 Jun 2022 22:43:01 GMT">
					<outline text="stats.ctLaunches++;" created="Thu, 06 May 2021 13:42:48 GMT"/>
					<outline text="stats.whenLastLaunch = new Date ();" created="Thu, 06 May 2021 13:42:54 GMT"/>
					<outline text="statsChanged ();" created="Tue, 04 May 2021 16:23:20 GMT"/>
					<outline text="davehttp.start (config, function (theRequest) {">
						<outline text="var params = theRequest.params;" created="Wed, 08 Jun 2022 15:38:09 GMT"/>
						<outline text="function returnNotFound () {">
							<outline text="theRequest.httpReturn (404, &quot;text/plain&quot;, &quot;Not found.&quot;);"/>
							<outline text="}"/>
							</outline>
						<outline text="function returnHtml (htmltext) {">
							<outline text="theRequest.httpReturn (200, &quot;text/html; charset=utf-8&quot;, htmltext); //6/13/22 by DW"/>
							<outline text="}"/>
							</outline>
						<outline text="function returnOpml (opmltext) {">
							<outline text="theRequest.httpReturn (200, &quot;text/xml; charset=utf-8&quot;, opmltext); //6/13/22 by DW"/>
							<outline text="}"/>
							</outline>
						<outline text="function returnError (jstruct) {">
							<outline text="theRequest.httpReturn (500, &quot;application/json&quot;, utils.jsonStringify (jstruct));"/>
							<outline text="}"/>
							</outline>
						<outline text="function returnMailbox (err, theFeed) {" isComment="true" created="Sat, 18 Jun 2022 15:40:56 GMT">
							<outline text="function servePage (templatetext) {" created="Fri, 04 Feb 2022 20:59:16 GMT">
								<outline text="var pagetable = {">
									<outline text="productNameForDisplay: myProductName, "/>
									<outline text="version: myVersion,"/>
									<outline text="feedTitle: theFeed.title," created="Sat, 18 Jun 2022 15:17:18 GMT"/>
									<outline text="config: utils.jsonStringify ({})," created="Sat, 18 Jun 2022 15:59:49 GMT"/>
									<outline text="riverJsonText: utils.jsonStringify (theFeed)" created="Sat, 18 Jun 2022 15:52:00 GMT"/>
									<outline text="};"/>
									</outline>
								<outline text="var pagetext = utils.multipleReplaceAll (templatetext.toString (), pagetable, false, &quot;[%&quot;, &quot;%]&quot;);"/>
								<outline text="returnHtml (pagetext);"/>
								<outline text="}" created="Fri, 04 Feb 2022 21:02:43 GMT"/>
								</outline>
							<outline text="if (err) {" created="Sat, 18 Jun 2022 15:45:50 GMT">
								<outline text="returnError (err);" created="Sat, 18 Jun 2022 15:46:16 GMT"/>
								<outline text="}" created="Sat, 18 Jun 2022 15:45:52 GMT"/>
								</outline>
							<outline text="else {" created="Sat, 18 Jun 2022 15:45:53 GMT">
								<outline text="request (config.urlMailboxTemplate, function (err, response, templatetext) {">
									<outline text="if (err) {" created="Sat, 18 Jun 2022 15:46:27 GMT">
										<outline text="returnError (err);" created="Sat, 18 Jun 2022 15:46:31 GMT"/>
										<outline text="}" created="Sat, 18 Jun 2022 15:46:34 GMT"/>
										</outline>
									<outline text="else {" created="Sat, 18 Jun 2022 15:46:36 GMT">
										<outline text="if (response.statusCode != 200) {">
											<outline text="returnError ({message: &quot;Can't view the feed mailbox because there was an error: code == &quot; + response.statusCode});" created="Sat, 18 Jun 2022 15:47:01 GMT"/>
											<outline text="}"/>
											</outline>
										<outline text="else {" created="Sat, 18 Jun 2022 15:47:44 GMT">
											<outline text="servePage (templatetext);" created="Fri, 04 Feb 2022 21:01:42 GMT"/>
											<outline text="}" created="Sat, 18 Jun 2022 15:47:45 GMT"/>
											</outline>
										<outline text="}" created="Sat, 18 Jun 2022 15:46:38 GMT"/>
										</outline>
									<outline text="});"/>
									</outline>
								<outline text="}" created="Sat, 18 Jun 2022 15:45:56 GMT"/>
								</outline>
							<outline text="}" created="Sat, 18 Jun 2022 15:41:12 GMT"/>
							</outline>
						<outline text="function returnData (jstruct) {">
							<outline text="if (jstruct === undefined) {">
								<outline text="jstruct = {};"/>
								<outline text="}"/>
								</outline>
							<outline text="theRequest.httpReturn (200, &quot;application/json; charset=utf-8&quot;, utils.jsonStringify (jstruct)); //6/13/22 by DW"/>
							<outline text="}"/>
							</outline>
						<outline text="function httpReturn (err, jstruct) {">
							<outline text="if (err) {">
								<outline text="returnError (err);"/>
								<outline text="}"/>
								</outline>
							<outline text="else {">
								<outline text="returnData (jstruct);"/>
								<outline text="}"/>
								</outline>
							<outline text="}"/>
							</outline>
						<outline text="function returnRedirect (url) {">
							<outline text="const code = 302;" created="Mon, 20 Jun 2022 16:15:04 GMT"/>
							<outline text="theRequest.httpReturn (code, &quot;text/plain&quot;, code + &quot; REDIRECT&quot;, {location: url});"/>
							<outline text="}"/>
							<outline text=""/>
							</outline>
						<outline text="function mailboxRedirect () {" created="Mon, 20 Jun 2022 16:10:32 GMT">
							<outline text="var newUrl = &quot;/?template=mailbox&quot;;" created="Mon, 20 Jun 2022 16:10:40 GMT"/>
							<outline text="if (params.url !== undefined) {" created="Mon, 20 Jun 2022 16:10:57 GMT">
								<outline text="newUrl += &quot;&amp;url=&quot; + params.url;" created="Mon, 20 Jun 2022 16:11:25 GMT"/>
								<outline text="}" created="Mon, 20 Jun 2022 16:11:47 GMT"/>
								</outline>
							<outline text="returnRedirect (newUrl);" created="Mon, 20 Jun 2022 16:11:51 GMT"/>
							<outline text="}" created="Mon, 20 Jun 2022 16:10:40 GMT"/>
							</outline>
						<outline text="switch (theRequest.lowerpath) {">
							<outline text="case &quot;/&quot;: //6/20/22 by DW" created="Mon, 20 Jun 2022 15:04:37 GMT">
								<outline text="viewFeedInTemplate (params.url, params.template, returnHtml);" created="Mon, 20 Jun 2022 15:04:54 GMT"/>
								<outline text="break;" created="Mon, 20 Jun 2022 15:04:45 GMT"/>
								</outline>
							<outline text="case &quot;/stats&quot;: ">
								<outline text="returnData (stats); " created="Sun, 12 Jun 2022 13:32:48 GMT"/>
								<outline text="break;"/>
								</outline>
							<outline text="case &quot;/returnjson&quot;: ">
								<outline text="readFeed (params.url, httpReturn);" created="Sun, 12 Jun 2022 13:32:48 GMT"/>
								<outline text="break;"/>
								</outline>
							<outline text="case &quot;/returnopml&quot;:" created="Fri, 19 Nov 2021 15:43:41 GMT">
								<outline text="readFeed (params.url, function (err, theFeed) {" created="Sun, 12 Jun 2022 13:58:30 GMT">
									<outline text="if (err) {" created="Sun, 12 Jun 2022 13:58:48 GMT">
										<outline text="returnError (err);" created="Sun, 12 Jun 2022 13:58:50 GMT"/>
										<outline text="}" created="Sun, 12 Jun 2022 13:58:55 GMT"/>
										</outline>
									<outline text="else {" created="Sun, 12 Jun 2022 13:58:55 GMT">
										<outline text="returnOpml (reallysimple.convertFeedToOpml (theFeed));" created="Fri, 19 Nov 2021 17:10:05 GMT"/>
										<outline text="}" created="Sun, 12 Jun 2022 13:58:57 GMT"/>
										</outline>
									<outline text="});" created="Sun, 12 Jun 2022 13:58:44 GMT"/>
									</outline>
								<outline text="break;" created="Fri, 19 Nov 2021 15:43:48 GMT"/>
								</outline>
							<outline text="case &quot;/returnmailbox&quot;: //6/18/22 by DW" created="Sat, 18 Jun 2022 15:38:38 GMT">
								<outline text="mailboxRedirect ();" created="Mon, 20 Jun 2022 16:09:50 GMT"/>
								<outline text="break;" created="Sat, 18 Jun 2022 15:38:46 GMT"/>
								</outline>
							<outline text="default:" created="Wed, 08 Jun 2022 15:37:23 GMT">
								<outline text="returnNotFound ();"/>
								<outline text="break;"/>
								</outline>
							<outline text="}"/>
							</outline>
						<outline text="});"/>
						</outline>
					<outline text="setInterval (everySecond, 1000); "/>
					<outline text="});" created="Sun, 12 Jun 2022 22:43:20 GMT"/>
					</outline>
				</outline>
			<outline text="readme.md" created="Sun, 12 Jun 2022 15:35:51 GMT">
				<outline text="# feeder" created="Sun, 12 Jun 2022 15:35:53 GMT">
					<outline text="A Node server app that hooks the &lt;a href=&quot;https://github.com/scripting/reallysimple&quot;&gt;reallysimple&lt;/a&gt; package up to the web." created="Sun, 12 Jun 2022 15:36:02 GMT"/>
					</outline>
				<outline text="### Why?" created="Sun, 12 Jun 2022 15:37:49 GMT">
					<outline text="To provide service to &lt;a href=&quot;http://drummer.scripting.com/&quot;&gt;Drummer&lt;/a&gt; and possibly other apps that run in the browser." created="Sun, 12 Jun 2022 15:37:57 GMT"/>
					</outline>
				<outline text="### Two calls" created="Sun, 12 Jun 2022 15:42:56 GMT">
					<outline text="Two calls are supported: /returnjson and /returnopml. Both take a &lt;i&gt;url&lt;/i&gt; parameter. " created="Sun, 12 Jun 2022 15:43:01 GMT"/>
					<outline text="http://feeder.scripting.com/returnjson?url=http://scripting.com/rss.xml " created="Sun, 12 Jun 2022 15:44:40 GMT">
						<outline text="* Returns a JSON structure containing the information in the feed, as processed by reallysimple. " created="Sun, 12 Jun 2022 15:45:25 GMT"/>
						</outline>
					<outline text="http://feeder.scripting.com/returnopml?url=http://scripting.com/rss.xml " created="Sun, 12 Jun 2022 15:45:12 GMT">
						<outline text="* Returns an OPML structure which you can insert into an outline, with all the items from the feed. " created="Sun, 12 Jun 2022 15:45:52 GMT"/>
						</outline>
					<outline text="These calls are used from &lt;a href=&quot;http://drummer.scripting.com/&quot;&gt;Drummer&lt;/a&gt; to implement the &lt;a href=&quot;http://docserver.scripting.com/?verb=rss.readFeed&quot;&gt;rss.readFeed&lt;/a&gt; verb and to allow &lt;a href=&quot;https://www.youtube.com/watch?v=j7L1bvP0dQc&quot;&gt;expanding of rss node types&lt;/a&gt;. " created="Sun, 12 Jun 2022 15:54:57 GMT"/>
					</outline>
				<outline text="### Caveats" created="Sun, 12 Jun 2022 15:44:21 GMT">
					<outline text="If you're deploying a real application, please run your own copy of this app. " created="Sun, 12 Jun 2022 15:46:43 GMT"/>
					<outline text="It's fine to use feeder.scripting.com for testing. " created="Sun, 12 Jun 2022 15:55:36 GMT"/>
					</outline>
				<outline text="### Questions or comments" created="Sun, 12 Jun 2022 15:47:36 GMT">
					<outline text="Please respond in &lt;a href=&quot;https://github.com/scripting/reallysimple/issues/1&quot;&gt;this thread&lt;/a&gt; on the reallysimple issues section. " created="Sun, 12 Jun 2022 15:47:48 GMT"/>
					</outline>
				</outline>
			<outline text="old stuff -- 6/12/22 by DW" isComment="true" created="Sun, 12 Jun 2022 13:55:02 GMT">
				<outline text="feeder.js" created="Mon, 08 Mar 2021 15:16:10 GMT">
					<outline text="const myVersion = &quot;0.4.3&quot;, myProductName = &quot;feeder&quot;;  " created="Mon, 03 Feb 2014 03:21:03 GMT" pgfnum="36831"/>
					<outline text="" created="Mon, 08 Mar 2021 15:16:36 GMT"/>
					<outline text="const fs = require (&quot;fs&quot;);" created="Sat, 20 Feb 2021 22:03:12 GMT"/>
					<outline text="const utils = require (&quot;daveutils&quot;);" created="Sat, 20 Feb 2021 22:03:12 GMT"/>
					<outline text="const davehttp = require (&quot;davehttp&quot;);"/>
					<outline text="const reallysimple = require (&quot;reallysimple&quot;);" created="Sat, 05 Mar 2022 17:19:07 GMT"/>
					<outline text="" created="Sat, 13 Mar 2021 15:42:13 GMT"/>
					<outline text="var config = {">
						<outline text="port: process.env.PORT || 1801,"/>
						<outline text="flLogToConsole: true,"/>
						<outline text="flAllowAccessFromAnywhere: true,"/>
						<outline text="timeOutSecs: 3" created="Fri, 19 Nov 2021 15:47:33 GMT"/>
						<outline text="}"/>
						</outline>
					<outline text="" created="Fri, 19 Nov 2021 15:44:30 GMT"/>
					<outline text="const allowedHeadNames = [" created="Fri, 19 Nov 2021 16:17:57 GMT">
						<outline text="&quot;title&quot;, &quot;link&quot;, &quot;description&quot;, &quot;language&quot;, &quot;copyright&quot;, &quot;managingEditor&quot;, &quot;webMaster&quot;, &quot;lastBuildDate&quot;, &quot;pubDate&quot;, &quot;category&quot;," created="Fri, 19 Nov 2021 16:18:14 GMT"/>
						<outline text="&quot;generator&quot;, &quot;docs&quot;, &quot;cloud&quot;, &quot;ttl&quot;, &quot;image&quot;, &quot;rating&quot;, &quot;textInput&quot;, &quot;skipHours&quot;, &quot;skipDays&quot;, &quot;source:account&quot;, &quot;source:localtime&quot;, " created="Fri, 19 Nov 2021 16:18:53 GMT"/>
						<outline text="&quot;source:likes&quot;" created="Fri, 19 Nov 2021 16:26:02 GMT"/>
						<outline text="];" created="Fri, 19 Nov 2021 16:18:06 GMT"/>
						</outline>
					<outline text="const allowedItemNames = [" created="Fri, 19 Nov 2021 16:17:57 GMT">
						<outline text="&quot;title&quot;, &quot;link&quot;, &quot;description&quot;, &quot;author&quot;, &quot;category&quot;, &quot;comments&quot;, &quot;enclosure&quot;, &quot;guid&quot;, &quot;pubDate&quot;, &quot;source&quot;, &quot;outline&quot;" created="Fri, 19 Nov 2021 16:18:14 GMT"/>
						<outline text="];" created="Fri, 19 Nov 2021 16:18:06 GMT"/>
						</outline>
					<outline text="" created="Fri, 19 Nov 2021 16:47:14 GMT"/>
					<outline text="function isEmptyObject (obj) {">
						<outline text="return (Object.keys (obj).length === 0);"/>
						<outline text="}"/>
						</outline>
					<outline text="" created="Fri, 19 Nov 2021 17:16:08 GMT"/>
					<outline text="function getItemPermalink (item) { //cribbed from River6, we're going to crib other stuff too ;-)">
						<outline text="var rssguid = item [&quot;rss:guid&quot;], returnedval = undefined;"/>
						<outline text="if (rssguid !== undefined) {">
							<outline text="var atts = rssguid [&quot;@&quot;];"/>
							<outline text="if (atts.ispermalink === undefined) {">
								<outline text="returnedval = rssguid [&quot;#&quot;];"/>
								<outline text="}"/>
								</outline>
							<outline text="else {">
								<outline text="if (utils.getBoolean (atts.ispermalink)) {">
									<outline text="returnedval = rssguid [&quot;#&quot;];"/>
									<outline text="}"/>
									</outline>
								<outline text="}"/>
								</outline>
							<outline text="}"/>
							</outline>
						<outline text="if (returnedval !== undefined) {">
							<outline text="if (utils.beginsWith (returnedval, &quot;http&quot;)) {">
								<outline text="return (returnedval);"/>
								<outline text="}"/>
								</outline>
							<outline text="}"/>
							</outline>
						<outline text="return (undefined);"/>
						<outline text="}"/>
						</outline>
					<outline text="" created="Fri, 19 Nov 2021 17:01:15 GMT"/>
					<outline text="function convertFeed (oldFeed) {" created="Fri, 19 Nov 2021 15:55:43 GMT">
						<outline text="Changes" isComment="true" created="Fri, 19 Nov 2021 16:46:10 GMT">
							<outline text="11/19/21; 11:46:14 AM by DW" created="Fri, 19 Nov 2021 16:46:13 GMT">
								<outline text="The feedreader package puts all kinds of junk into the structure it creates. We filter out the junk and only allow elements that are in the RSS 2.0 spec or the source namespace. " created="Fri, 19 Nov 2021 16:46:14 GMT"/>
								<outline text="I did not include source:outline because it needs to be unmangled. I don't want to send it out in the form that feedreader creates it. " created="Fri, 19 Nov 2021 16:52:00 GMT"/>
								</outline>
							</outline>
						<outline text="var newFeed = new Object ();" created="Fri, 19 Nov 2021 15:57:09 GMT"/>
						<outline text="for (var x in oldFeed.head) {" created="Fri, 19 Nov 2021 16:00:27 GMT">
							<outline text="let val = oldFeed.head [x];" created="Fri, 19 Nov 2021 16:02:02 GMT"/>
							<outline text="if (val != null) {" created="Fri, 19 Nov 2021 16:02:13 GMT">
								<outline text="allowedHeadNames.forEach (function (name) {" created="Fri, 19 Nov 2021 16:41:41 GMT">
									<outline text="if (x == name) {" created="Fri, 19 Nov 2021 16:42:07 GMT">
										<outline text="newFeed [x] = val;" created="Fri, 19 Nov 2021 16:00:48 GMT"/>
										<outline text="}" created="Fri, 19 Nov 2021 16:42:13 GMT"/>
										</outline>
									<outline text="});" created="Fri, 19 Nov 2021 16:42:01 GMT"/>
									</outline>
								<outline text="}" created="Fri, 19 Nov 2021 16:02:19 GMT"/>
								</outline>
							<outline text="}" created="Fri, 19 Nov 2021 16:00:40 GMT"/>
							</outline>
						<outline text="if (isEmptyObject (newFeed.image)) {" created="Fri, 19 Nov 2021 17:12:24 GMT">
							<outline text="delete newFeed.image;" created="Fri, 19 Nov 2021 17:16:39 GMT"/>
							<outline text="}" created="Fri, 19 Nov 2021 17:16:43 GMT"/>
							</outline>
						<outline text="" created="Fri, 19 Nov 2021 16:02:47 GMT"/>
						<outline text="newFeed.items = new Array ();" created="Fri, 19 Nov 2021 16:08:19 GMT"/>
						<outline text="oldFeed.items.forEach (function (item) {" created="Fri, 19 Nov 2021 16:02:48 GMT">
							<outline text="var newItem = new Object ();" created="Fri, 19 Nov 2021 16:44:26 GMT"/>
							<outline text="for (var x in item) {" created="Fri, 19 Nov 2021 16:16:21 GMT">
								<outline text="val = item [x];" created="Fri, 19 Nov 2021 16:43:17 GMT"/>
								<outline text="if (val != null) {" created="Fri, 19 Nov 2021 16:43:22 GMT">
									<outline text="allowedItemNames.forEach (function (name) {" created="Fri, 19 Nov 2021 16:41:41 GMT">
										<outline text="if (x == name) {" created="Fri, 19 Nov 2021 16:42:07 GMT">
											<outline text="newItem [x] = val;" created="Fri, 19 Nov 2021 16:00:48 GMT"/>
											<outline text="}" created="Fri, 19 Nov 2021 16:42:13 GMT"/>
											</outline>
										<outline text="});" created="Fri, 19 Nov 2021 16:42:01 GMT"/>
										</outline>
									<outline text="}" created="Fri, 19 Nov 2021 16:43:30 GMT"/>
									</outline>
								<outline text="}" created="Fri, 19 Nov 2021 16:43:13 GMT"/>
								</outline>
							<outline text="newItem.guid = getItemPermalink (item);" created="Fri, 19 Nov 2021 16:55:02 GMT"/>
							<outline text="if (isEmptyObject (newItem.source)) {" created="Fri, 19 Nov 2021 17:12:24 GMT">
								<outline text="delete newItem.source;" created="Fri, 19 Nov 2021 17:16:39 GMT"/>
								<outline text="}" created="Fri, 19 Nov 2021 17:16:43 GMT"/>
								</outline>
							<outline text="newFeed.items.push (newItem);" created="Fri, 19 Nov 2021 16:44:44 GMT"/>
							<outline text="});" created="Fri, 19 Nov 2021 16:03:02 GMT"/>
							</outline>
						<outline text="" created="Fri, 19 Nov 2021 16:04:38 GMT"/>
						<outline text="return (newFeed);" created="Fri, 19 Nov 2021 16:04:39 GMT"/>
						<outline text="}" created="Fri, 19 Nov 2021 15:55:55 GMT"/>
						</outline>
					<outline text="function convertToOpml (theFeed) {" created="Fri, 19 Nov 2021 17:10:23 GMT">
						<outline text="var theOutline = {" created="Fri, 19 Nov 2021 17:20:00 GMT">
							<outline text="opml: {" created="Fri, 19 Nov 2021 17:22:35 GMT">
								<outline text="head: {" created="Fri, 19 Nov 2021 17:20:09 GMT">
									<outline text="title: theFeed.title" created="Fri, 19 Nov 2021 17:20:42 GMT"/>
									<outline text="}," created="Fri, 19 Nov 2021 17:20:13 GMT"/>
									</outline>
								<outline text="body: {" created="Fri, 19 Nov 2021 17:20:14 GMT">
									<outline text="subs: new Array ()" created="Fri, 19 Nov 2021 17:20:23 GMT"/>
									<outline text="}" created="Fri, 19 Nov 2021 17:20:17 GMT"/>
									</outline>
								<outline text="}" created="Fri, 19 Nov 2021 17:22:37 GMT"/>
								</outline>
							<outline text="}" created="Fri, 19 Nov 2021 17:20:08 GMT"/>
							</outline>
						<outline text="theFeed.items.forEach (function (item) {" created="Fri, 19 Nov 2021 17:22:13 GMT">
							<outline text="var linetext, subtext;" created="Fri, 19 Nov 2021 17:23:57 GMT"/>
							<outline text="if (item.title === undefined) {" created="Fri, 19 Nov 2021 17:23:57 GMT">
								<outline text="linetext = item.description;" created="Fri, 19 Nov 2021 17:24:22 GMT"/>
								<outline text="}" created="Fri, 19 Nov 2021 17:24:07 GMT"/>
								</outline>
							<outline text="else {" created="Fri, 19 Nov 2021 17:24:08 GMT">
								<outline text="linetext = item.title;" created="Fri, 19 Nov 2021 17:24:22 GMT"/>
								<outline text="subtext = item.description;" created="Fri, 19 Nov 2021 17:24:52 GMT"/>
								<outline text="}" created="Fri, 19 Nov 2021 17:24:09 GMT"/>
								</outline>
							<outline text="theOutline.opml.body.subs.push ({" created="Fri, 19 Nov 2021 17:22:58 GMT">
								<outline text="text: linetext," created="Fri, 19 Nov 2021 17:23:39 GMT"/>
								<outline text="type: &quot;link&quot;," created="Fri, 19 Nov 2021 17:25:33 GMT"/>
								<outline text="url: item.link" created="Fri, 19 Nov 2021 17:25:37 GMT"/>
								<outline text="});" created="Fri, 19 Nov 2021 17:23:10 GMT"/>
								</outline>
							<outline text="});" created="Fri, 19 Nov 2021 17:22:28 GMT"/>
							</outline>
						<outline text="return (opml.stringify (theOutline));" created="Fri, 19 Nov 2021 17:26:29 GMT"/>
						<outline text="}" created="Fri, 19 Nov 2021 17:10:33 GMT"/>
						</outline>
					<outline text="" created="Fri, 19 Nov 2021 15:55:44 GMT"/>
					<outline text="function readFeed (url, callback) {" created="Fri, 19 Nov 2021 15:54:09 GMT">
						<outline text="feedRead.parseUrl (url, config.timeOutSecs, function (err, theFeed) {">
							<outline text="if (err) {" created="Fri, 19 Nov 2021 15:55:07 GMT">
								<outline text="callback (err);" created="Fri, 19 Nov 2021 15:55:11 GMT"/>
								<outline text="}" created="Fri, 19 Nov 2021 15:55:15 GMT"/>
								</outline>
							<outline text="else {" created="Fri, 19 Nov 2021 15:55:16 GMT">
								<outline text="callback (undefined, convertFeed (theFeed));" created="Fri, 19 Nov 2021 15:55:26 GMT"/>
								<outline text="}" created="Fri, 19 Nov 2021 15:55:18 GMT"/>
								</outline>
							<outline text="});" created="Fri, 19 Nov 2021 15:55:02 GMT"/>
							</outline>
						<outline text="}" created="Fri, 19 Nov 2021 15:54:21 GMT"/>
						</outline>
					<outline text="function viewHomePage (feedUrl, callback) {" created="Sat, 20 Nov 2021 14:27:34 GMT">
						<outline text="" created="Sat, 20 Nov 2021 14:36:46 GMT"/>
						<outline text="" created="Sat, 20 Nov 2021 14:36:46 GMT"/>
						<outline text="readFeed (feedUrl, function (err, theFeed) {">
							<outline text="if (err) {" created="Sat, 20 Nov 2021 14:31:45 GMT">
								<outline text="callback (err.message);" created="Sat, 20 Nov 2021 14:31:47 GMT"/>
								<outline text="}" created="Sat, 20 Nov 2021 14:31:54 GMT"/>
								</outline>
							<outline text="else {" created="Sat, 20 Nov 2021 14:31:54 GMT">
								<outline text="fs.readFile (&quot;template.html&quot;, function (err, templatetext) {" created="Sat, 20 Nov 2021 14:31:11 GMT">
									<outline text="if (err) {" created="Sat, 20 Nov 2021 14:31:45 GMT">
										<outline text="callback (err.message);" created="Sat, 20 Nov 2021 14:31:47 GMT"/>
										<outline text="}" created="Sat, 20 Nov 2021 14:31:54 GMT"/>
										</outline>
									<outline text="else {" created="Sat, 20 Nov 2021 14:31:54 GMT">
										<outline text="var pagetable = {">
											<outline text="url: feedUrl,"/>
											<outline text="bodytext: utils.jsonStringify (theFeed)"/>
											<outline text="};"/>
											</outline>
										<outline text="var htmltext = utils.multipleReplaceAll (templatetext.toString (), pagetable, false, &quot;[%&quot;, &quot;%]&quot;);"/>
										<outline text="callback (htmltext);" created="Sat, 20 Nov 2021 14:27:56 GMT"/>
										<outline text="}" created="Sat, 20 Nov 2021 14:31:56 GMT"/>
										</outline>
									<outline text="});" created="Sat, 20 Nov 2021 14:31:34 GMT"/>
									</outline>
								<outline text="}" created="Sat, 20 Nov 2021 14:31:56 GMT"/>
								</outline>
							<outline text="});" created="Sat, 20 Nov 2021 14:37:28 GMT"/>
							</outline>
						<outline text="" created="Sat, 20 Nov 2021 14:36:46 GMT"/>
						<outline text="}" created="Sat, 20 Nov 2021 14:27:42 GMT"/>
						</outline>
					<outline text="" created="Fri, 19 Nov 2021 15:54:10 GMT"/>
					<outline text="davehttp.start (config, function (theRequest) {">
						<outline text="function returnHtml (htmltext) {">
							<outline text="theRequest.httpReturn (200, &quot;text/html&quot;, htmltext);"/>
							<outline text="}"/>
							</outline>
						<outline text="function returnOpml (opmltext) {">
							<outline text="theRequest.httpReturn (200, &quot;text/xml&quot;, opmltext);"/>
							<outline text="}"/>
							</outline>
						<outline text="function returnData (jstruct) {">
							<outline text="if (jstruct === undefined) {">
								<outline text="jstruct = {};"/>
								<outline text="}"/>
								</outline>
							<outline text="theRequest.httpReturn (200, &quot;application/json&quot;, utils.jsonStringify (jstruct));"/>
							<outline text="}"/>
							</outline>
						<outline text="function returnError (jstruct) {">
							<outline text="theRequest.httpReturn (500, &quot;application/json&quot;, utils.jsonStringify (jstruct));"/>
							<outline text="}"/>
							</outline>
						<outline text="function httpReturn (err, jstruct) {">
							<outline text="if (err) {">
								<outline text="returnError (err);"/>
								<outline text="}"/>
								</outline>
							<outline text="else {">
								<outline text="returnData (jstruct);"/>
								<outline text="}"/>
								</outline>
							<outline text="}"/>
							</outline>
						<outline text="switch (theRequest.lowerpath) {">
							<outline text="case &quot;/&quot;:">
								<outline text="viewHomePage (theRequest.params.url, returnHtml);"/>
								<outline text="return;"/>
								</outline>
							<outline text="case &quot;/now&quot;:">
								<outline text="theRequest.httpReturn (200, &quot;text/plain&quot;, new Date ().toUTCString ());"/>
								<outline text="return;"/>
								</outline>
							<outline text="case &quot;/returnjson&quot;:" created="Fri, 19 Nov 2021 15:43:41 GMT">
								<outline text="readFeed (theRequest.params.url, httpReturn);"/>
								<outline text="return;" created="Fri, 19 Nov 2021 15:43:48 GMT"/>
								</outline>
							<outline text="case &quot;/returnopml&quot;:" created="Fri, 19 Nov 2021 15:43:41 GMT">
								<outline text="readFeed (theRequest.params.url, function (err, theFeed) {">
									<outline text="if (err) {" created="Fri, 19 Nov 2021 17:09:41 GMT">
										<outline text="returnError (err);" created="Fri, 19 Nov 2021 17:09:44 GMT"/>
										<outline text="}" created="Fri, 19 Nov 2021 17:09:48 GMT"/>
										</outline>
									<outline text="else {" created="Fri, 19 Nov 2021 17:09:49 GMT">
										<outline text="returnOpml (convertToOpml (theFeed));" created="Fri, 19 Nov 2021 17:10:05 GMT"/>
										<outline text="}" created="Fri, 19 Nov 2021 17:09:51 GMT"/>
										</outline>
									<outline text="});" created="Fri, 19 Nov 2021 17:09:36 GMT"/>
									</outline>
								<outline text="return;" created="Fri, 19 Nov 2021 15:43:48 GMT"/>
								</outline>
							<outline text="default:" created="Fri, 19 Nov 2021 15:38:59 GMT">
								<outline text="theRequest.httpReturn (404, &quot;text/plain&quot;, &quot;Not found.&quot;);"/>
								<outline text="return;"/>
								</outline>
							<outline text="}"/>
							</outline>
						<outline text="});"/>
						</outline>
					</outline>
				<outline text="template.html">
					<outline text="&lt;html&gt;">
						<outline text="&lt;head&gt;">
							<outline text="&lt;title&gt;feedRead viewer&lt;/title&gt;"/>
							<outline text="&lt;meta http-equiv=&quot;Content-Type&quot; content=&quot;text/html; charset=utf-8&quot;&gt;"/>
							<outline text="&lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot;&gt;"/>
							<outline text="&lt;script src=&quot;http://fargo.io/code/jquery-1.9.1.min.js&quot;&gt;&lt;/script&gt;"/>
							<outline text="&lt;link href=&quot;http://fargo.io/code/bootstrap.css&quot; rel=&quot;stylesheet&quot;&gt;"/>
							<outline text="&lt;script src=&quot;http://fargo.io/code/bootstrap.min.js&quot;&gt;&lt;/script&gt;"/>
							<outline text="&lt;link rel=&quot;stylesheet&quot; href=&quot;http://fargo.io/code/fontAwesome/css/font-awesome.min.css&quot;/&gt;"/>
							<outline text="&lt;link href=&quot;https://fonts.googleapis.com/css?family=Ubuntu&quot; rel=&quot;stylesheet&quot;&gt;"/>
							<outline text="&lt;script&gt;" created="Thu, 12 Dec 2013 17:06:51 GMT" pgfnum="33502">
								<outline text="function everySecond () {">
									<outline text="}"/>
									</outline>
								<outline text="function startup () {">
									<outline text="console.log (&quot;startup&quot;);"/>
									<outline text="self.setInterval (function () {everySecond ()}, 1000); "/>
									<outline text="}"/>
									</outline>
								<outline text="&lt;/script&gt;" created="Thu, 12 Dec 2013 17:07:17 GMT" pgfnum="33504"/>
								</outline>
							<outline text="&lt;style&gt;" created="Wed, 11 Sep 2013 14:27:45 GMT" pgfnum="30095">
								<outline text="body {">
									<outline text="font-family: Ubuntu;"/>
									<outline text="font-size: 18px;"/>
									<outline text="background-color: whitesmoke;"/>
									<outline text="}"/>
									</outline>
								<outline text=".divPageBody {">
									<outline text="width: 75%;"/>
									<outline text="margin-top: 30px;"/>
									<outline text="margin-left: auto;"/>
									<outline text="margin-right: auto;"/>
									<outline text="margin-bottom: 400px;"/>
									<outline text="}"/>
									</outline>
								<outline text=".divUrl {">
									<outline text="margin-top: 25px;"/>
									<outline text="margin-bottom: 10px;"/>
									<outline text="}"/>
									</outline>
								<outline text="pre {">
									<outline text="padding: 0;" isComment="true"/>
									<outline text="background-color: white;"/>
									<outline text="}"/>
									</outline>
								<outline text=".divWhatIsThis {">
									<outline text="float: right;"/>
									<outline text="font-size: 16px;"/>
									<outline text="}"/>
									</outline>
								<outline text="&lt;/style&gt;" created="Wed, 11 Sep 2013 14:30:17 GMT" pgfnum="30105"/>
								</outline>
							<outline text="&lt;/head&gt;"/>
							</outline>
						<outline text="&lt;body&gt;">
							<outline text="&lt;div class=&quot;divPageBody&quot;&gt;">
								<outline text="&lt;h1&gt;feedRead viewer&lt;/h1&gt;" isComment="true"/>
								<outline text="&lt;div class=&quot;divWhatIsThis&quot;&gt;">
									<outline text="&lt;a href=&quot;http://scripting.com/2019/05/16/162444.html&quot;&gt;What is this?&lt;/a&gt;"/>
									<outline text="&lt;/div&gt;"/>
									</outline>
								<outline text="&lt;div class=&quot;divUrl&quot;&gt;">
									<outline text="[%url%]"/>
									<outline text="&lt;/div&gt;"/>
									</outline>
								<outline text="&lt;pre id=&quot;idXmlViewer&quot;&gt;[%bodytext%]&lt;/pre&gt;"/>
								<outline text="&lt;/div&gt;"/>
								</outline>
							<outline text="&lt;script&gt;">
								<outline text="$(document).ready (function () {">
									<outline text="startup ();" created="Wed, 30 Oct 2013 15:20:06 GMT" pgfnum="30656"/>
									<outline text="});"/>
									</outline>
								<outline text="&lt;/script&gt;"/>
								</outline>
							<outline text="&lt;/body&gt;"/>
							</outline>
						<outline text="&lt;/html&gt;"/>
						</outline>
					</outline>
				</outline>
			</outline>
		<outline text="build script" created="Fri, 19 Nov 2021 17:45:52 GMT">
			<outline text="nodeEditorSuite.utilities.buildFeeder ()" created="Fri, 19 Nov 2021 17:45:55 GMT"/>
			</outline>
		</body>
	</opml>
